; we directly reference the models from that folder
; using their MATLAB init_*.m and run_*.m scripts
; for maximal compatibility

(define-system AT
    (matlab "transmission"
            "../../processing/FALS/transmission"
            "init_transmission"
            "run_transmission")
  	(parameters)
  	(inputs  throttle brake)
  	(outputs speed RPM gear)
  	(piecewise-constant throttle 0 100)
  	(piecewise-constant brake    0 350)
    (sample 0.01))

(define AT5 (g)
    (always (0 30)
        (implies
            (and (!= gear g) (next (== gear g)))
            (next (always (0 2.5) (== gear g))))))

(define AT6 (t s)
    (implies (always (0 30) (< RPM 3000)) (always (0 t) (< speed s))))

(define AT1  (always (0 20) (< speed 120)))
(define AT2  (always (0 10) (< RPM  4750)))

(define AT51 (AT5 1))
(define AT52 (AT5 2))
(define AT53 (AT5 3))
(define AT54 (AT5 4))

(define AT6a (AT6  4 35))
(define AT6b (AT6  8 50))
(define AT6c (AT6 20 65))

(define AT6abc (and AT6a AT6b AT6c))

(define-system AFC_normal
    (matlab "powertrain"
            "../../processing/FALS/powertrain"
            "init_powertrain"
            "run_powertrain")
  	(parameters)
  	(inputs throttle engine)
  	(outputs mu mode)
  	
  	(piecewise-constant throttle 0 61.1)
  	(constant engine 900 1100)
    (sample 0.1))

(define-system AFC_power
    (matlab "powertrain"
            "../../processing/FALS/powertrain"
            "init_powertrain"
            "run_powertrain")
  	(parameters)
  	(inputs throttle engine)
  	(outputs mu mode)
  	
  	(piecewise-constant throttle 61.1 81.2)
  	(constant engine 900 1100)
    (sample 0.01))

(define
  rise (and (< throttle 8.8)
            (eventually (0 0.05) (> throttle 40))))

(define
  fall (and (> throttle 40)
            (eventually (0 0.05) (< throttle 8.8))))

(define normal (== mode 0))
(define power  (== mode 1))

(define AFC27 (beta)
  (always (11 50)
    (implies (or rise fall)
             (always (1 5) (< (abs mu) beta)))))

(define AFC29 (beta)
  (always (11 50) (< (abs mu) beta)))

(define AFC33 (beta)
  (always (11 50) (< (abs mu) beta)))


(define-system CC
    (matlab "cars"
            "../../processing/FALS/chasing-cars"
            "init_cars"
            "run_cars")
  	(parameters)
  	(inputs  throttle brake)
  	(outputs y1 y2 y3 y4 y5)
  	(piecewise-constant throttle 0 1)
  	(piecewise-constant brake    0 1)
    (sample 0.01))

(define CC1
    (always (0 100) (<= (- y5 y4) 40)))

(define CC2
    (always (0 70)
        (eventually (0 30) (>= (- y5 y4) 15))))

(define CC3
    (always (0 80)
        (or (always (0 20) (<= (- y2 y1) 20))
            (eventually (0 20) (>= (- y5 y4) 40)))))

(define CC4
    (always (0 65)
        (eventually (0 30)
            (always (0 5) (>= (- y5 y4) 8)))))

(define CC5
    (always (0 72)
        (eventually (0 8)
            (implies (always (0 5)  (>= (- y2 y1) 9))
                     (always (5 20) (>= (- y5 y4) 9))))))

; []_[0,50](y2-y1 > 7.5) /\ []_[0,50](y3-y2 > 7.5) /\ []_[0,50](y4-y3 > 7.5) /\ []_[0,50](y5-y4 > 7.5)
(define CCx
    (and
        (always (0 50) (> (- y2 y1) 7.5))
        (always (0 50) (> (- y3 y2) 7.5))
        (always (0 50) (> (- y4 y3) 7.5))
        (always (0 50) (> (- y5 y4) 7.5))))

(define-system NN
    (matlab "neural"
            "../../processing/FALS/neural"
            "init_neural"
            "run_neural")
  	(parameters)
  	(inputs  Ref)
  	(outputs Pos NNPos)
  	(piecewise-constant Ref 1 3)
    (sample 0.01))

(define close_ref (p q)
    (<= (abs (- Pos Ref))
        (+ p (* q (abs Ref)))))

(define reach_ref_in_tau (p q)
    (eventually (0 2)
        (always (0 1)
            (close_ref p q))))

(define NN (p q)
    (always (1 18)
        (implies
            (not (close_ref p q))
            (reach_ref_in_tau p q))))

(define NNa
    (NN 0.005 0.03))

;    ◇_[0.0, 1.0] (Pos > 3.2)
; ∧  ◇_[1.0, 1.5] (□_[0, 0.5](1.75 < Pos < 2.25))
; ∧  □_[2.0, 3.0] (1.825 < Pos < 2.175)

(define-system NN_tight
    (matlab "neural"
            "../../processing/FALS/neural"
            "init_neural"
            "run_neural")
  	(parameters)
  	(inputs  Ref)
  	(outputs Pos NNPos)
  	(piecewise-constant Ref 1.95 2.05)
    (sample 0.1))

(define NNx
    (and
        (eventually (0.0 1.0) (> Pos 3.2))
        (eventually (1.0 1.5)
            (always (0.0 0.5) (and (< 1.75  Pos) (< Pos 2.25))))
        (always     (2.0 3.0) (and (< 1.825 Pos) (< Pos 2.175)))))

(define-system F16
  	(matlab "f16"
        "../../processing/FALS/f16-gcas"
        "init_f16"
        "run_f16")

	(parameters altg Vtg phig thetag psig)
    (inputs)
	(outputs altitude)

	(constant altg                4040)
	(constant Vtg                  540)

	(constant phig    0.6283    0.8901)
	(constant thetag -1.2566   -1.0996)
	(constant psig   -1.1781   -0.3927))

(define F16a
	(always (0 15) (> altitude 0)))


(define-system SC
  	(matlab "steam-condenser"
        "../../processing/FALS/steam-condenser"
        "init_steamcondenser"
        "run_steamcondenser")
  	(parameters)
  	(inputs  Fn)
  	(outputs T Fcw Q pressure)
  	(piecewise-constant Fn 3.99 4.01))

(define SCa
    (always (30 35)
        (in pressure 87.0 87.5)))
